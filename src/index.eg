require-macros:
   earl-hyperscript -> [%]
require:
   "@cycle/core" as cycle
   "@cycle/dom" -> makeDOMDriver

let Observable = cycle.Rx.Observable

;; ================ App ==================

intent = {=> DOM} -> {
   first-name$ = chain DOM:
      @get("#first-name", .input)
      @map: event -> event.target.value
   last-name$ = chain DOM:
      @get("#last-name",  .input)
      @map: event -> event.target.value
}
model = actions -> {
   first-name$ = chain actions:
      @first-name$
      @start-with("")
   last-name$  = chain actions:
      @last-name$
      @start-with("")
}
view = state -> {
   DOM = Observable.combine-latest with
      state.first-name$
      state.last-name$
      (first-name, last-name) ->
         div %
            div.form-group %
               label %
                  attributes = { html-for = "first-name" }
                  "First Name:"
               input.form-control %
                  attributes = {
                     type = .text
                     id = "first-name"
                     placeholder = "First Name"
                  }
            div.form-group %
               label %
                  attributes = { html-for = "last-name" }
                  "Last Name:"
               input.form-control %
                  attributes = {
                     type = .text
                     id = "last-name"
                     placeholder = "Last Name"
                  }
            hr %
            h3 % 'Hello {first-name} {last-name}'
            pre %
               code.javascript %
                  "document.getElementById('demo').innerHTML = 'Hello JavaScript!'"
            pre %
               code.earlgrey %
                  "if current: @push: '{JSON.stringify(current)}\n'"
}

main = responses -> view(model(intent(responses)))

cycle.run(main) with
   {
      DOM = makeDOMDriver: "#app"
   }
